/*------------------------------------*\
    #components.pxh-view
\*------------------------------------*/

.pxh-wrapper {
  padding-top: $pxh-view-header-height;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

@keyframes pxh-view--animate-wide {
  0% {
    margin-#{$pxh-drawer-side}: $pxh-drawer-width-wide;
  }
  33% {
    margin-#{$pxh-drawer-side}: $pxh-drawer-width-wide;
  }
  66% {
    margin-#{$pxh-drawer-side}: $pxh-drawer-width-narrow;
  }
  100% {
    margin-#{$pxh-drawer-side}: $pxh-drawer-width-narrow;
  }
}

@keyframes pxh-view--animate-narrow {
  0% {
    margin-#{$pxh-drawer-side}: $pxh-drawer-width-narrow;
  }
  33% {
    margin-#{$pxh-drawer-side}: $pxh-drawer-width-wide;
  }
  100% {
    margin-#{$pxh-drawer-side}: $pxh-drawer-width-wide;
  }
}

@keyframes pxh-view--animate-full-to-wide {
  0% {
    margin-#{$pxh-drawer-side}: 0;
  }
  50% {
    margin-#{$pxh-drawer-side}: 0;
  }
  100% {
    margin-#{$pxh-drawer-side}: $pxh-drawer-width-narrow;
  }
}

@keyframes pxh-view--animate-full-to-narrow {
  0% {
    margin-#{$pxh-drawer-side}: 0;
  }
  50% {
    margin-#{$pxh-drawer-side}: 0;
  }
  100% {
    margin-#{$pxh-drawer-side}: $pxh-drawer-width-wide;
  }
}

.pxh-view {
  height: 100%;
  overflow: auto;
  background-color: $pxh-view-bg-color;
  -webkit-overflow-scrolling: touch;

  &--animate-wide {
    animation-timing-function: ease-in-out;
    animation-fill-mode: forwards;
    animation-duration: 1000ms;
    animation-name: pxh-view--animate-wide;
  }

  &--animate-narrow {
    animation-timing-function: ease-in-out;
    animation-fill-mode: forwards;
    animation-duration: 500ms;
    animation-name: pxh-view--animate-narrow;
  }

  &--animate-full-to-wide {
    animation-timing-function: ease-in-out;
    animation-fill-mode: forwards;
    animation-duration: 250ms;
    animation-name: pxh-view--animate-full-to-wide;
  }

  &--animate-full-to-narrow {
    animation-timing-function: ease-in-out;
    animation-fill-mode: forwards;
    animation-duration: 250ms;
    animation-name: pxh-view--animate-full-to-narrow;
  }
}

@each $color-slug, $color-variable in $pxh-view-bg-colors {
  .pxh-view--#{$color-slug} {
    background-color: $color-variable;
  }
}

// nest all responsive styles within a pxh-chromeful class (applied to the <body> element so they only apply if the chrome is present
// this violates our principle of immutability for class styles, but yolo
.pxh-chromeful {
  // From the @md (tablet) breakpoint and wider,
  // the view is displayed in its wide state, which accounts
  // for the width of the narrow state of the drawer on the left.
  @include mq($from: md) {
    .pxh-view--wide\@md {
      margin-#{$pxh-drawer-side}: $pxh-drawer-width-narrow;
    }
  }

  // From the @lg (desktop) breakpoint and wider,
  // add this class to display the view in its narrow state,
  // which accounts for the width of the wide state of the drawer.
  @include mq($from: lg) {
    .pxh-view--narrow\@lg {
      margin-#{$pxh-drawer-side}: $pxh-drawer-width-wide;
    }
  }

  @include mq($from: lg) {
    .pxh-view--wide\@lg {
      margin-#{$pxh-drawer-side}: $pxh-drawer-width-narrow;
    }
  }
}

/*------------------------------------*\
    #PXH-VIEW-HEADER
\*------------------------------------*/

@keyframes pxh-view-header--animate-wide {
  0% {
    #{$pxh-drawer-side}: $pxh-drawer-width-wide;
  }
  33% {
    #{$pxh-drawer-side}: $pxh-drawer-width-wide;
  }
  66% {
    #{$pxh-drawer-side}: $pxh-drawer-width-narrow;
  }
  100% {
    #{$pxh-drawer-side}: $pxh-drawer-width-narrow;
  }
}

@keyframes pxh-view-header--animate-narrow {
  0% {
    #{$pxh-drawer-side}: $pxh-drawer-width-narrow;
  }
  33% {
    #{$pxh-drawer-side}: $pxh-drawer-width-wide;
  }
  100% {
    #{$pxh-drawer-side}: $pxh-drawer-width-wide;
  }
}

@keyframes pxh-view-header--animate-full-to-wide {
  0% {
    #{$pxh-drawer-side}: 0;
  }
  50% {
    #{$pxh-drawer-side}: 0;
  }
  100% {
    #{$pxh-drawer-side}: $pxh-drawer-width-narrow;
  }
}

@keyframes pxh-view-header--animate-full-to-narrow {
  0% {
    #{$pxh-drawer-side}: 0;
  }
  50% {
    #{$pxh-drawer-side}: 0;
  }
  100% {
    #{$pxh-drawer-side}: $pxh-drawer-width-wide;
  }
}

.pxh-view-header {
  position: fixed;
  top: 0;
  #{$pxh-drawer-opposite-side}: 0;
  #{$pxh-drawer-side}: 0;
  background-color: $pxh-view-header-bg-color;
  border-style: solid;
  border-color: $pxh-view-header-border-color;
  border-width: $pxh-view-header-border-width;
  height: $pxh-view-header-height;
  z-index: 250;

  &--animate-wide {
    animation-timing-function: ease-in-out;
    animation-fill-mode: forwards;
    animation-duration: 1000ms;
    animation-name: pxh-view-header--animate-wide;
  }

  &--animate-narrow {
    animation-timing-function: ease-in-out;
    animation-fill-mode: forwards;
    animation-duration: 500ms;
    animation-name: pxh-view-header--animate-narrow;
  }

  &--animate-full-to-wide {
    animation-timing-function: ease-in-out;
    animation-fill-mode: forwards;
    animation-duration: 250ms;
    animation-name: pxh-view-header--animate-full-to-wide;
  }

  &--animate-full-to-narrow {
    animation-timing-function: ease-in-out;
    animation-fill-mode: forwards;
    animation-duration: 250ms;
    animation-name: pxh-view-header--animate-full-to-narrow;
  }
}

// nest all responsive styles within a pxh-chromeful class (applied to the <body> element so they only apply if the chrome is present
// this violates our principle of immutability for class styles, but yolo
.pxh-chromeful {
  // From the @md (tablet) breakpoint and wider,
  // the view header is displayed in its wide state, which accounts
  // for the width of the narrow state of the drawer on the left.
  @include mq($from: md) {
    .pxh-view-header--wide\@md {
      #{$pxh-drawer-side}: $pxh-drawer-width-narrow;
    }
  }

  @include mq($from: lg) {
    .pxh-view-header--wide\@lg {
      #{$pxh-drawer-side}: $pxh-drawer-width-narrow;
    }
  }

  @include mq($until: md) {
    .pxh-view-header--nudge-until\@md {
      padding-#{$pxh-drawer-side}: $pxh-drawer-width-narrow;
    }
  }

  // From the @lg (desktop) breakpoint and wider,
  // add this class to display the view header in its narrow state,
  // which accounts for the width of the wide state of the drawer.
  @include mq($from: lg) {
    .pxh-view-header--narrow\@lg {
      #{$pxh-drawer-side}: $pxh-drawer-width-wide;
    }
  }
}

.pxh-view-header__title {
  font-weight: normal;
  margin: 0;
  padding: 0;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  padding-top: $pxh-base-spacing-unit;
  text-align: center;
  font-size: $pxh-view-header-title-font-size;
}

.pxh-view-header__title-link.pxh-view-header__title-link.pxh-view-header__title-link  { // chained to override px-theme
  color: $pxh-view-header-title-link-text-color;
  text-decoration: none;
}

.pxh-view-header__title-link:link.pxh-view-header__title-link:link.pxh-view-header__title-link:link,
.pxh-view-header__title-link:visited.pxh-view-header__title-link:visited.pxh-view-header__title-link:visited { // chained to override px-theme
  color: $pxh-view-header-title-link-text-color;
}

/*------------------------------------*\
    #PXH-VIEW-HEADER-DRAWER-TOGGLE
\*------------------------------------*/

.pxh-view-header-drawer-toggle {
  position: fixed;
  top: 0;
  #{$pxh-drawer-side}: 0;
  opacity: 1;
  z-index: 500; // making the same as overlay to overcome IE10 clickthru bug with overlay
  transition: all 300ms ease-in-out;

  &__icon {
    fill: $pxh-view-header-drawer-toggle-icon-color;
  }

  // Hide the toggle button in the view-header. This class is
  // used even though the drawer covers the view-header toggle
  // button, because sometimes click events on the drawer toggle
  // are intercepted by the view-header toggle as well, resulting
  // in a bounce scenario.
  &--hidden {
    #{$pxh-drawer-side}: $pxh-drawer-width-narrow * -1;
    opacity: 0;  
  }

  &__link {
    display: block;
    height: $pxh-drawer-width-narrow;
    width: $pxh-drawer-width-narrow;
    padding-top: $pxh-drawer-margin;
    padding-#{$pxh-drawer-side}: $pxh-drawer-margin;
    text-decoration: none;
  }
}

// nest all responsive styles within a pxh-chromeful class (applied to the <body> element so they only apply if the chrome is present
// this violates our principle of immutability for class styles, but yolo
.pxh-chromeful {
  // From the @md (tablet) breakpoint and wider, hide the
  // toggle button in the view-header, as the toggle in the
  // narrow left drawer is persistently displayed instead.
  @include mq($from: md) {
    .pxh-view-header-drawer-toggle--hidden\@md {
        #{$pxh-drawer-side}: $pxh-drawer-width-narrow * -1;
        opacity: 0;
    }
  }
}
